# Shotokan Kata iOS App .gitignore

# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## Compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## Compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata dir
.swiftpm/
.netrc

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Visual Studio Code
.vscode/

# JetBrains IDEs (IntelliJ, Android Studio, etc.)
.idea/
*.iml
*.ipr
*.iws

# Android Studio and IntelliJ specific files (in case of cross-platform development)
.gradle/
local.properties

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.sublime-project
*.sublime-workspace

# Core Data
*.mom
*.momd
*.omo

# SwiftData
*.store

# Backup files
*.backup
*.bak
*.tmp

# Log files
*.log
logs/

# Testing
TestResults/
test-results/
coverage/
*.coverage
*.coveragexml

# Environment variables and configuration
.env
.env.local
.env.*.local
config.plist
secrets.plist

# API keys and sensitive data (for Shotokan Kata app)
APIKeys.plist
Keys.plist
Secrets.swift

# Temporary kata data files (if any)
*.tmp.json
temp_kata_data/

# Generated localization files (if using automated tools)
*.xliff.bak
*.strings.bak

# Documentation build
docs/build/

# Archive and export files
*.xcarchive

# Provisioning profiles
*.mobileprovision
*.provisionprofile

# App Store Connect API Key
AuthKey_*.p8

# Firebase configuration (if used for analytics)
GoogleService-Info.plist
google-services.json

# Crashlytics
crashlytics-build.properties
fabric.properties

# Custom temporary files for Shotokan Kata development
kata_temp/
quiz_temp/
user_data_temp/

# Backup of original files
*.orig

# Patch files
*.patch
*.diff

# Node.js (if using for any build tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python (if using for any build scripts)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/

# Ruby (if using for fastlane or other tools)
Gemfile.lock
.bundle/

# Custom build scripts output
build_output/
export/

# Temporary request files (development aid)
requestsMadeToCopilotAgent.txt
